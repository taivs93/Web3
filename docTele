Dưới đây là bản dịch tiếng Việt (tóm lược và chuyển ngữ) của tài liệu hướng dẫn “From BotFather to ‘Hello World’” từ trang chính thức Telegram Bots Tutorial:

---

## Từ BotFather đến “Hello World”

Hướng dẫn này sẽ giúp bạn xây dựng bot Telegram đầu tiên của mình. Nếu bạn đã quen thuộc với các bước cơ bản, có thể bỏ qua những phần không cần thiết. Có các ví dụ tương đương cho C#, Python, Go và TypeScript.

### Giới thiệu

* Telegram **Bot API** trả về dữ liệu dạng JSON khi bạn thực hiện truy vấn.
* Một bot là script hoặc ứng dụng gọi API qua HTTPS và chờ phản hồi.
* Bạn có thể dùng trình duyệt hoặc cURL để thử API, tuy nhiên để phát triển quy mô lớn, bạn nên sử dụng thư viện hoặc framework hỗ trợ.

### Chuẩn bị

1. **Lấy token bot**: Gửi lệnh `/newbot` tới **@BotFather** trên Telegram để tạo và nhận token. Giữ token an toàn như mật khẩu.
2. **Cài đặt IDE**: Nếu dùng Java, xài IntelliJ hoặc Eclipse, NetBeans. Cần có JDK (ví dụ JDK 17).
3. **Chọn framework**: Hướng dẫn dùng thư viện `TelegramBots` (Java), nhưng bạn có thể dùng bất kỳ ngôn ngữ nào — có ví dụ cho C#, Python, Go, TypeScript.

### Tạo dự án

* Trong IntelliJ: **File > New > Project**, chọn Java + Maven, JDK 17, đặt tên ví dụ "BotTutorial".
* IDE sẽ sinh project và file `Main.java`.

### Thêm dependency

Trong `pom.xml`, sau thẻ `</properties>`, thêm:

```xml
<dependencies>
  <dependency>
    <groupId>org.telegram</groupId>
    <artifactId>telegrambots</artifactId>
    <version>6.0.1</version>
  </dependency>
</dependencies>
```

### Viết mã

1. Tạo class `Bot` extends `TelegramLongPollingBot`.
2. Implement các phương thức:

   * `getBotUsername()` — trả về username bot.
   * `getBotToken()` — trả về token.
   * `onUpdateReceived(Update update)` — xử lý các yêu cầu, ví dụ `System.out.println(update)`.
3. Trong `main`, đăng ký bot:

   ```java
   TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);
   botsApi.registerBot(new Bot());
   ```

### Khởi chạy bot lần đầu

* Khi chạy bot, nếu bạn nhắn tin cho bot, cập nhật sẽ hiển thị trong console — chứng tỏ bot đã hoạt động.

### Nhận và xử lý tin nhắn

Trong `onUpdateReceived`:

```java
var msg = update.getMessage();
var user = msg.getFrom();
System.out.println(user.getFirstName() + " wrote " + msg.getText());
```

### Gửi tin nhắn

Tạo method `sendText(Long who, String what)`:

```java
SendMessage sm = SendMessage.builder()
  .chatId(who.toString())
  .text(what).build();
execute(sm);
```

Sau khi register bot, gọi `sendText(userId, "Hello World!")` để gửi tin nhắn.

### Echo Bot (phản hồi lại tin nhắn)

Trong `onUpdateReceived`:

```java
sendText(id, msg.getText());
```

Bạn cũng có thể dùng `CopyMessage` để bot gửi lại đúng nội dung hoặc loại tin nhắn, không chỉ là văn bản.

### Thêm lệnh (commands)

1. Trong BotFather, tạo lệnh ví dụ `/scream` và `/whisper`.
2. Trong code:

   * Lưu trạng thái `boolean screaming`.
   * Nếu nhận `/scream`, bật scream; nếu `/whisper`, tắt.
   * Nếu đang ở chế độ scream, bot gửi lại tin nhắn viết hoa.

### Nút và bàn phím Inline

* Có hai loại nút: **Reply Buttons** và **Inline Buttons**.
* Tạo nút ví dụ:

  ```java
  InlineKeyboardButton next = InlineKeyboardButton.builder()
    .text("Next").callbackData("next").build();
  ```
* Tạo bàn phím (`InlineKeyboardMarkup`) chứa các nút.
* Gửi tin nhắn kèm bàn phím:

  ```java
  SendMessage.builder()
    .chatId(who.toString()).text(txt)
    .replyMarkup(kb).build();
  ```
* Xử lý `CallbackQuery` khi người dùng nhấn nút để thay đổi nội dung hoặc bàn phím.

### Điều hướng (Navigation)

* Khi nhận `CallbackQuery`, phản hồi bằng `AnswerCallbackQuery`, và dùng `EditMessageText` hoặc `EditMessageReplyMarkup` để thay đổi nội dung hoặc bàn phím.

### Lưu dữ liệu (Database)

Telegram không lưu lại lịch sử cập nhật cho bạn, nên nếu cần lưu thông tin người dùng, bạn cần dùng database như SQLite, HSQLDB, Derby... hoặc kỹ thuật serialization khác.

### Triển khai (Hosting)

* Gói code thành executable/JAR để dễ deploy.
* Mua VPS hoặc dùng microcontroller có kết nối mạng.
* Tải file và chạy trên server, ví dụ:

  ```
  scp -r /TBot user@server:/bots/
  java -jar TutorialBot.jar
  ```
* Bạn có thể dùng Docker để đóng gói dễ dàng hơn.

### Tham khảo thêm

* Tổng quan nền tảng Bot Telegram
* API Telegram chi tiết
* Các features khác

---

### Gợi ý về bản dịch

Nếu bạn muốn mình tiếp tục dịch thêm (như phần Advanced Tutorial, Database chi tiết, Hosting cụ thể...) hoặc muốn dịch sang ngôn ngữ/mã giả cụ thể, cứ nói nhé! Mình sẵn lòng giúp bạn chi tiết hơn.
